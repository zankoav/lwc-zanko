public interface LFCreditScoring {
    void setPagesMap(String deviceView);
	Map<String, LongFormPage> getPagesMap();
	void updateOpportunityOnReturnFromEmail(String deviceView);
	void doGenerateCreditFactoryReport(String selectedCompanyId);
	void calculateCreditFactoryReports();
	void deleteCreditFactoryReports(String identificationnumber);
	void getCreditScoreData(String selectedCompanyId);
	void doCheckAuthorizatedGranted();
	void goToSetVatNumberStep();
	Boolean validateVatId();
	void doUpdateVatNumber();
	Boolean getResultOfCheckAuthorizatedGranted();
	void doCheckBlackList();
	void setResultOfCheckBlackList();
	Boolean getResultOfCheckBlackList();
	void resetCfDecision(Integer defaultBillingPeriod, Integer defaultPaymentTerms, Decimal depositValue, String classRating, CreditCompany company);
	CreditFactoryDecision getCfDecision();
	void setDeposit(CreditCompany company, Integer defaultBillingPeriod, Integer defaultPaymentTerms, Decimal creditLimit, Decimal maxCreditLimit);
	Decimal getDeposit();
	String searchDuplicates(CreditCompany company);
	void saveCompanyDetails();
	void saveTotalConsumption();
	void doUpdateSFobjects(CFReportResponse reportResponse);
	void doUpdateTaxId(String taxId);
	void setUnavailableOptions(String verdict, String statusCode);
	String getUnavailableOptions();
	void saveCreditScoringResult(Integer defaultBillingPeriod, Integer defaultPaymentTerms, Decimal creditLimit, Decimal deposit);
	void setSFobjects(String opptyId);
	void doSaveAndContinueLater();
	void setAccount(String accId);
	Account getAccount();
	void setOpportunity(String opptyId);
	Opportunity getOpportunity();
	Contact getContact();
	void setCompaniesFromCF(String opportunityId);
	CFSearchResponse getCompaniesFromCF();
	void setCreditReportFromSF(String opportunityId);
	CFReportResponse getCreditReportFromSF();
	void validateFields(String substep);
	void resetOpportunityToStep(String substep);
}